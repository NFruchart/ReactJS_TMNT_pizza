{"version":3,"sources":["img/pizzas sync /^/.*$","img/pizzas/4-fromages.jpg","img/pizzas/marguerita.jpg","img/pizzas/pepperoni.jpg","img/pizzas/reine.jpg","pizzas.js","actions/types.js","reducers/index.js","Tiles.js","components/Tile.js","components/Header.js","App.js","components/NewOrder.js","actions/index.js","components/Pizza.js","components/OrderList.js","components/Order.js","components/Orders.js","components/PaymentOrder.js","serviceWorker.js","index.js"],"names":["map","./4-fromages.jpg","./marguerita.jpg","./pepperoni.jpg","./reine.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","pizzas","marg","name","price","image","pepp","4fro","reine","ADD_ORDER","ADD_PIZZA_ORDER","initialState","orders","JSON","parse","localStorage","getItem","tiles","description","icon","bgColor","action","Tile","_ref","desc","react_default","a","createElement","className","style","backgroundColor","onClick","react_fontawesome_index_es","withRouter","_ref$isHome","isHome","history","size","push","library","add","faEuroSign","faFire","faShippingFast","faPizzaSlice","faArrowLeft","faEdit","faTrash","App","handleClick","_this","props","renderTiles","item","components_Tile","key","components_Header","this","Component","NewOrder","concat","Date","now","addOrder","mapDispatchToProps","type","payload","total","paid","connect","Pizza","addToOrder","toLocaleString","navigator","language","minimumFractionDigits","alt","src","require","OrderList","order","_ref$paidButton","paidButton","_ref$setPaid","setPaid","orderPizzasDisplay","totalPizzaPrice","Math","round","toFixed","react","Order","state","orderInfo","match","params","oid","index","pizzaId","objectSpread","orderPizzas","setState","addPizzaOrder","_this2","findIndex","_this3","pizzasDisplay","components_Pizza","components_OrderList","Orders","editOrder","deleteOrder","toConsumableArray","splice","setItem","stringify","ordersListDisplay","PaymentOrder","selectedOrder","target","value","find","length","_this4","filter","htmlFor","onChange","handleChange","selectedOrderDisplay","Boolean","window","location","hostname","store","createStore","arguments","undefined","addOrderOrders","addPizzaOrderOrders","ReactDOM","render","es","react_router_dom","react_router","exact","path","component","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d94fa6fe.chunk.js","sourcesContent":["var map = {\n\t\"./4-fromages.jpg\": 53,\n\t\"./marguerita.jpg\": 54,\n\t\"./pepperoni.jpg\": 55,\n\t\"./reine.jpg\": 56\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 52;","module.exports = __webpack_public_path__ + \"static/media/4-fromages.bf16a90d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/marguerita.44ae2bd2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pepperoni.b9c11f75.jpg\";","module.exports = __webpack_public_path__ + \"static/media/reine.f4fde97f.jpg\";","// Une liste de pizzas :P\nconst pizzas = {\n  \"marg\": {\n    name: 'Margarita',\n    price: 7.90,\n    image: 'marguerita.jpg'\n  },\n  \"pepp\": {\n    name: 'Pepperoni',\n    price: 11.90,\n    image: 'pepperoni.jpg'\n  },\n  \"4fro\": {\n    name: '4 fromages',\n    price: 10.90,\n    image: '4-fromages.jpg'\n  },\n  \"reine\": {\n    name: 'Reine',\n    price: 9.90,\n    image: 'reine.jpg'\n  }\n}\n\nexport default pizzas\n","export const ADD_ORDER = 'ADD_ORDER';\r\nexport const ADD_PIZZA_ORDER = 'ADD_PIZZA_ORDER';","import pizzas from '../pizzas';\r\nimport { ADD_ORDER, ADD_PIZZA_ORDER } from '../actions/types'\r\n\r\nconst initialState = {\r\n    pizzas,\r\n    orders: JSON.parse(localStorage.getItem(\"orders\")) || []\r\n};\r\n\r\nexport default function rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_ORDER:\r\n            const addOrderOrders = [...state.orders, action.payload];\r\n            localStorage.setItem(\"orders\", JSON.stringify(addOrderOrders));\r\n            return ({\r\n                ...state,\r\n                orders: addOrderOrders\r\n            });\r\n        case ADD_PIZZA_ORDER:\r\n            const index = state.orders.findIndex(order => {\r\n                return order.id === action.payload.order.id;\r\n            });\r\n            const addPizzaOrderOrders = [...state.orders];\r\n            addPizzaOrderOrders[index] = action.payload.order;\r\n\r\n            localStorage.setItem(\"orders\", JSON.stringify(addPizzaOrderOrders));            \r\n            return ({\r\n                ...state,\r\n                orders: addPizzaOrderOrders\r\n            });\r\n        default:\r\n            return state\r\n    }\r\n}","const tiles = [\r\n    {\r\n        name: \"Nouvelle commande\",\r\n        description: \"Créer et enregistrer un nouvelle commande\",\r\n        icon: \"shipping-fast\",\r\n        bgColor: \"#006994\",\r\n        action: \"new\"\r\n    },\r\n    {\r\n        name: \"Commande en cours\",\r\n        description: \"Voir le details de commandes en cours\",\r\n        icon: \"fire\",\r\n        bgColor: \"#911D00\",\r\n        action: \"orders\"\r\n    },\r\n    {\r\n        name: \"Paiement commande\",\r\n        description: \"Encaisser une commande\",\r\n        icon: \"euro-sign\",\r\n        bgColor: \"#009130\",\r\n        action: \"payment-order\"\r\n    },\r\n];\r\n\r\nexport default tiles;","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n// snippet component stateless : rafc\r\nconst Tile = ({name, icon, desc , bgColor, action}) => {\r\n    return (\r\n        <div className=\"tile\" style={{backgroundColor: bgColor }} onClick={action}>\r\n            <div className=\"tile-icon\">\r\n                <FontAwesomeIcon icon={icon} />\r\n            </div>\r\n            <div className=\"tile-text\">\r\n                <h2>{name}</h2>\r\n                <p>{desc}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tile;","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst Header = ( {isHome = false, history}) => {\r\n\r\n    const goToHome = () => {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n            {!isHome &&\r\n            <FontAwesomeIcon icon=\"arrow-left\" size=\"2x\" className=\"back-button\"\r\n            onClick={() => goToHome()} />\r\n            }\r\n            <div className=\"title-wrapper\">\r\n                <FontAwesomeIcon icon=\"pizza-slice\" />\r\n                <h1>TMNT Pizza</h1>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\n// Utilisation du HOC (High Order Component) proposé par React Routeur DOM qui permet d'avoir accès aux props match, location et history sans les passer dans le composant Header\r\nexport default withRouter(Header);","import React, { Component } from 'react';\n\n// Stylesheets\nimport './stylesheets/App.scss';\n\n// import des icônes de Fontawesome\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faShippingFast, faFire, faEuroSign ,faPizzaSlice, faArrowLeft, faEdit, faTrash} from \"@fortawesome/free-solid-svg-icons\";\n\nimport tiles from './Tiles'\nimport Tile from \"./components/Tile\";\nimport Header from \"./components/Header\";\n\n//ajout des icônes que l'on utilise dans l'ensemble de l'app\nlibrary.add(faEuroSign, faFire, faShippingFast, faPizzaSlice, faArrowLeft, faEdit, faTrash);\n\nclass App extends Component {\n\n  handleClick = action => {\n    this.props.history.push(action)\n  }\n  \n  renderTiles = () => {\n    return tiles.map(item => \n    <Tile key={item.action} name={item.name} icon={item.icon} desc={item.description} bgColor={item.bgColor} action={() => this.handleClick(item.action)}/>)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header isHome={true}/>\n        <div className=\"tiles-wrapper\">\n          {this.renderTiles()}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addOrder } from '../actions'; // On importe la fonction liée à l'action de type ADD_ORDER\r\n\r\nclass NewOrder extends Component {\r\n\r\n    componentDidMount() {\r\n        const id = `CMD-${Date.now()}`;\r\n        this.props.addOrder(id);\r\n        this.props.history.push(`order/${id}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addOrder: addOrder    \r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(NewOrder);\r\n","import { ADD_ORDER, ADD_PIZZA_ORDER } from './types';\r\n\r\n// On définit une action pour ajouter une commande de pizzas => on envoie cette action dans le composant NewOrder dans le mapDispatchToProps\r\nexport const addOrder = (id) => {\r\n    return ({\r\n        type: ADD_ORDER,\r\n        payload: {\r\n            id,\r\n            pizzas: {},\r\n            total: 0,\r\n            paid: false\r\n        }\r\n    });\r\n};\r\n\r\nexport const addPizzaOrder = (order) => {\r\n    return ({\r\n        type: ADD_PIZZA_ORDER,\r\n        payload: {\r\n            order\r\n        }\r\n    });\r\n};\r\n","import React from 'react'\r\n\r\n// snippet component stateless : rafc\r\nconst Pizza = ( { name, price, image, addToOrder }) => {\r\n\r\n    // Reformatage du prix\r\n    price=price.toLocaleString(navigator.language, { minimumFractionDigits: 2} )\r\n\r\n    return (\r\n        <div className=\"pizza-wrapper\" onClick={addToOrder}>\r\n            <div className=\"pizza\">\r\n                <img className=\"pizza-image\" alt=\"\" src={require(`../img/pizzas/${image}`)}/>\r\n                <div className=\"pizza-text\">\r\n                    <h3>{name}</h3>\r\n                    <div className=\"pizza-price\">{price} €</div>\r\n                </div>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pizza\r\n\r\n\r\n","import React, { Fragment } from 'react'\r\nimport pizzas from '../pizzas'\r\n\r\n// snippet component stateless : rafc\r\nconst OrderList = ({ order, paidButton = false, setPaid = false }) => {\r\n    const orderPizzasDisplay = Object.keys(order.pizzas).map(key => {\r\n        const totalPizzaPrice = Math.round(pizzas[key].price * order.pizzas[key]*10 )/10;\r\n        return (\r\n            <div key={key} className=\"order-details-item\">\r\n                <div className=\"pizza-details\">\r\n                    <span>{pizzas[key].name}</span>\r\n                    <span>{totalPizzaPrice.toFixed(2)} €</span>\r\n                </div>\r\n                <div className=\"price-details\">\r\n                    ({order.pizzas[key]} x {pizzas[key].price} €)\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    return (        \r\n        <Fragment>\r\n            <div className=\"order-details-list\">\r\n                {orderPizzasDisplay}\r\n            </div>\r\n            <div className=\"order-summary\">\r\n                <div className=\"order-total\">\r\n                    Soit un total de : <strong>{order.total.toFixed(2)} €</strong>\r\n                </div>\r\n                {paidButton &&\r\n                <button className=\"order-paid-button\" onClick={setPaid}>Encaisser la commande</button>\r\n                }\r\n            </div>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default OrderList\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Pizza from './Pizza';\r\nimport OrderList from './OrderList';\r\nimport { connect } from 'react-redux';\r\nimport { addPizzaOrder } from '../actions'\r\n\r\nclass Order extends Component {\r\n    state = {        \r\n        orderInfo: {\r\n            id: this.props.match.params.oid,\r\n            index: null\r\n        },\r\n        order: {}\r\n    }\r\n\r\n    componentDidMount() {        \r\n        // findIndex renvoie l'indice de l'élément recherché\r\n        const index = this.props.orders.findIndex(order => order.id === this.state.orderInfo.id);\r\n        const order = this.props.orders[index]\r\n        this.setState({\r\n            order,\r\n            orderInfo: {\r\n                ...this.state.orderInfo,\r\n                index\r\n            }\r\n        })\r\n    }\r\n\r\n    addToOrder = (pizzaId) => {\r\n        const order = { ...this.state.order }\r\n        const orderPizzas = { ...order.pizzas }\r\n        // Vérification s'il y a déjà l'id de la pizza selectionnée présent dans la commande\r\n        if (!orderPizzas[pizzaId]) {\r\n            // si non, nombre de la pizza selectionnée = 1\r\n            orderPizzas[pizzaId] = 1;\r\n        } else {\r\n            // si oui, on incrémente nombre de la pizza selectionnée\r\n            orderPizzas[pizzaId]++;\r\n        }\r\n\r\n        order.pizzas = orderPizzas;\r\n        order.total = order.total + this.props.pizzas[pizzaId].price\r\n\r\n        // MAJ du state et du localStorage\r\n        this.setState({ order }, () => {\r\n            this.props.addPizzaOrder(order)            \r\n        });\r\n    }\r\n\r\n    render() {\r\n        // Object.keys pour le map (le map ne peut être utilisé qu'avec un array, hors ici il s'agit d'un tableau d'objets)\r\n        const pizzasDisplay = Object.keys(this.props.pizzas).map(key => {\r\n            return (\r\n                <Pizza\r\n                    key={key}\r\n                    name={this.props.pizzas[key].name}\r\n                    price={this.props.pizzas[key].price}\r\n                    image={this.props.pizzas[key].image}\r\n                    addToOrder={() => this.addToOrder(key)} />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <Header />\r\n                <div className=\"order\">\r\n                    <div className=\"pizzas-wrapper\">\r\n                        {pizzasDisplay}\r\n                    </div>\r\n\r\n                    <div className=\"order-details-wrapper\">\r\n                        <div className=\"order-details\">\r\n                            <h2>Détail de la commande n°</h2>\r\n                            <h2>{this.state.orderInfo.id}</h2>\r\n                            {this.state.order.id &&\r\n                                <OrderList\r\n                                    order={this.state.order}\r\n                                />\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        pizzas: state.pizzas,\r\n        orders: state.orders\r\n    })\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addPizzaOrder\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Order)\r\n","import React, { Component, Fragment } from 'react';\r\nimport Header from './Header'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default class Orders extends Component {\r\n    state = {\r\n        orders: JSON.parse(localStorage.getItem(\"orders\")) || []\r\n    }\r\n\r\n    editOrder = (id) => {\r\n        this.props.history.push(`order/${id}`)\r\n    }\r\n\r\n    deleteOrder = (id) => {\r\n        const orders = [...this.state.orders];\r\n        const index = orders.findIndex(order => order.id === id);\r\n        orders.splice(index, 1);\r\n        this.setState({ orders }, () => {\r\n            localStorage.setItem(\"orders\", JSON.stringify(this.state.orders));\r\n        })\r\n    }\r\n\r\n    ordersListDisplay = () => {\r\n        return this.state.orders.map(order => {\r\n            return (\r\n                <tr key={order.id}>\r\n                    <td>{order.id}</td>\r\n                    <td>{order.total.toFixed(2)} €</td>\r\n                    <td className={order.paid ? \"bg-success\" : \"bg-warning\"}>\r\n                        {order.paid ? \"Réglé\" : \"En attente de paiement\"}</td>\r\n                    <td className=\"order-actions\">\r\n\r\n                        {!order.paid &&\r\n                            <Fragment>\r\n                                <button className=\"order-action-edit\"\r\n                                    onClick={() => this.editOrder(order.id)}>\r\n                                    <FontAwesomeIcon icon=\"edit\" />\r\n                                </button>\r\n\r\n                                <button className=\"order-action-delete\"\r\n                                    onClick={() => this.deleteOrder(order.id)}>\r\n                                    <FontAwesomeIcon icon=\"trash\" />\r\n                                </button>\r\n                            </Fragment>\r\n\r\n                        }\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <Header />\r\n                <div className=\"orders-list\">\r\n                    <h2>Liste des commandes</h2>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Total commande</th>\r\n                                <th>Statut commande</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.ordersListDisplay()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from './Header'\r\nimport OrderList from './OrderList';\r\n\r\nexport default class PaymentOrder extends Component {\r\n    state = {\r\n        orders: JSON.parse(localStorage.getItem(\"orders\")) || [],\r\n        selectedOrder: []\r\n    }\r\n\r\n    handleChange(e) {\r\n        const id = e.target.value;\r\n        const selectedOrder = this.state.orders.find(order => order.id === id);\r\n        if (selectedOrder) {\r\n            this.setState({ selectedOrder })\r\n        }\r\n    }\r\n\r\n    setPaid() {\r\n        const orders = [...this.state.orders];\r\n        const index = orders.findIndex(order => order.id === this.state.selectedOrder.id);\r\n        const selectedOrder = {...this.state.selectedOrder};\r\n        selectedOrder.paid = true;\r\n        orders[index] = selectedOrder\r\n\r\n        this.setState({\r\n            orders,\r\n            selectedOrder: {}\r\n        }, () => {\r\n            localStorage.setItem(\"orders\", JSON.stringify(this.state.orders))\r\n        })\r\n    }\r\n\r\n    selectedOrderDisplay() {\r\n        if (Object.keys(this.state.selectedOrder).length > 0) {\r\n            return (\r\n                <div className=\"order-details\">\r\n                    <h2>Détail de la commande n°{this.state.selectedOrder.id}</h2>\r\n                    <OrderList \r\n                    order={this.state.selectedOrder} \r\n                    paidButton={true}\r\n                    setPaid={() => this.setPaid()}/>\r\n                </div>\r\n            )\r\n        }\r\n    }    \r\n\r\n    render() {\r\n        const ordersListDisplay = this.state.orders.filter(order => !order.paid).map(order => {\r\n            return (\r\n                <option key={order.id} value={order.id}>\r\n                    {order.id} - {order.total.toFixed(2)} €\r\n                </option>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <Header />\r\n                <div className=\"payment-wrapper\">\r\n                    <div className=\"order-selection\">\r\n                        <label htmlFor=\"orderSelect\">Selectionner la commande à encaisser</label>\r\n                        <select name=\"\" id=\"orderSelect\" onChange={e => this.handleChange(e)}>\r\n                            <option value=\"\"></option>\r\n                            {ordersListDisplay}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"payment-order\">\r\n                        <div className=\"order-details-wrapper\">\r\n                            {this.selectedOrderDisplay()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\nimport './index.css';\nimport App from './App';\nimport NewOrder from './components/NewOrder';\nimport Order from './components/Order';\nimport Orders from './components/Orders';\nimport PaymentOrder from './components/PaymentOrder';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\n// Création du store\nconst store = createStore(rootReducer)\n\nconst Root = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={App} />\n                <Route exact path=\"/new\" component={NewOrder} />\n                <Route path=\"/order/:oid\" component={Order} />\n                <Route path=\"/orders\" component={Orders} />\n                <Route path=\"/payment-order\" component={PaymentOrder} />\n            </Switch>\n        </BrowserRouter>\n    );\n};\n\nReactDOM.render(\n    // On englobe l'application dans le Provider pour la connexion avec le store\n    <Provider store={store}>\n        <Root />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}